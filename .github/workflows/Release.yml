name: Releases

on:
  push:
    branches:
      - main

jobs:
  preRelease:
    name: Pre Release Steps
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Build
        run: ./gradlew build --scan
  tests:
    name: Run Unit Tests
    needs: preRelease
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run unit tests
        run: ./gradlew testDevelopmentDebugUnitTest --scan --stacktrace
  generateDevelopmentRelease:
    name: Generate Development Release APK
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Decode KeyStore
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'krypt_cicd_key.keystore'
          encodedString: ${{ secrets.SIGN_KEY }}
      - name: Build Development Release APK
        run: ./gradlew assembleDevelopmentRelease  -q --warning-mode=summary -Pandroid.injected.signing.store.file=${{ steps.write_file.outputs.filePath }} -Pandroid.injected.signing.store.password=${{ secrets.SIGN_KEY_PASSWORD }} -Pandroid.injected.signing.key.alias=${{ secrets.SIGN_KEY_ALIAS }} -Pandroid.injected.signing.key.password=${{ secrets.SIGN_KEY_PASSWORD }} --scan
      - name: Upload Development Release APK
        uses: actions/upload-artifact@v1
        with:
          name: KryptDevelopmentRelease
          path: app/build/outputs/apk/Development/release/app-Development-release.apk
  generateProductionRelease:
    name: Generate Production Release APK
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - name: Decode KeyStore
        id: write_file
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'krypt_cicd_key.keystore'
          encodedString: ${{ secrets.SIGN_KEY }}
      - name: Build Production Release APK
        run: ./gradlew assembleProductionRelease  -q --warning-mode=summary -Pandroid.injected.signing.store.file=${{ steps.write_file.outputs.filePath }} -Pandroid.injected.signing.store.password=${{ secrets.SIGN_KEY_PASSWORD }} -Pandroid.injected.signing.key.alias=${{ secrets.SIGN_KEY_ALIAS }} -Pandroid.injected.signing.key.password=${{ secrets.SIGN_KEY_PASSWORD }} --scan
      - name: Upload Production Release APK
        uses: actions/upload-artifact@v1
        with:
          name: KryptProductionRelease
          path: app/build/outputs/apk/Production/release/app-Production-release.apk